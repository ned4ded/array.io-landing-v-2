<div id="section-features" class="container-fluid section features">
  <div class="row">
    <div class="col-12">
      <div class="container">
        <div class="row section__content">
          <div class="col-12">
            <nav class="features__nav">
              <a data-smooth-scroll href="#core" class="features__link">Array.IO Core</a>
              <a data-smooth-scroll href="#vm" class="features__link">Array Virtual Machine</a>
              <a data-smooth-scroll href="#keychain" class="features__link">Keychain</a>
              <a data-smooth-scroll href="#client" class="features__link">Array.IO Client</a>
            </nav>

            <div id="core" class="features__item">
              <span data-levitate class="features__icon features__icon--core"></span>

              <div class="features__caption features__caption--p--right">
                <h3 class="features__heading">Array.IO Core</h3>

                <p class="features__paragraph">The Core is the undercurrent power that runs deep in any system and defines its capabilities. We’ve made speed and convenience our priorities. That is why our blockchain is based on DPoS (Delegated Proof-of-Stake) consensus algorithm that allows faster transactions and has the innate support for smart contracts written in Solidity. This way our blockchain confirms transactions faster, hence it executes contracts faster, as well as it brings blockchain technology closer to the real world use.</p>
              </div>
            </div>

            <div id="vm" class="features__item">
              <div class="features__caption features__caption--p--left">
                <h3 class="features__heading features__heading--align--right">Array Virtual Machine</h3>

                <p class="features__paragraph">As you read these lines, all the existing platforms are trying to fight the issue of slow transactions. But the blockchain world doesn’t have ready decisions yet because it falls into the trap of using the Etherium Virtual Machine (EVM). To fight this problem, we’ve built our own virtual machine (Array Virtual Machine or AVM) that performs actions faster (e.g. it executes smart contracts 25% faster than Python-based VMs).</p>
              </div>

              <span data-levitate class="features__icon features__icon--vm"></span>
            </div>

            <div id="keychain" class="features__item">
              <span data-levitate class="features__icon features__icon--keys"></span>

              <div class="features__caption features__caption--p--right">
                <h3 class="features__heading">Keychain</h3>

                <p class="features__paragraph">Another factor that we value the most is security. We protect our users by providing them with two kinds of keys - public and private ones. To make our platform a safe and pleasant experience, we’ve created a shield called the Keychain. Keychain is a system for creating and managing private keys, signing transactions, and encrypting the data. It supports various formats of private keys (e.g. ECDSA and RSA) and can be used by a node, a Client or a DApp's NodeJS server to sign transactions. It can also be used by a Web application to keep the keys in an isolated environment.</p>
              </div>
            </div>

            <div id="client" class="features__item features__item--align--center features__item--client">
              <div class="features__caption">
                <h3 class="features__heading">Array.IO Client</h3>

                <p class="features__paragraph">The Array Platform allows developers to easily create DApps using a set of tools, which includes a software development kit (SDK), IDE plugins, Array.IO Node all-in-one installation tool and the extensive documentation with tutorials and guidelines. Our SDK consists of a smart contract compiler and debugger, as well as a set of APIs for cross-chain connectivity and IPFS interaction. IDE plugins offer easy-to-use environment for DApp creation and deployment, while the Array.IO Node installation tool enables you to instantly connect to our blockchain.
Our client application has a user-friendly interface which gives access to the DApp marketplace and runs the installed DApps in an isolated environment. It has several components built in: local storage, IPFS, keychain, OrbitDB, logger, and many more. These features are easily incorporated with the tools provided in the client SDK, which makes DApp development accessible for anyone.</p>
                </div>

                <div class="features__video">
                  <div class="browser">
                    <figure class="browser__heading">
                      <span class="browser__heading-text">Array.IO DApp environment</span>
                    </figure>

                    <figure class="browser__site">
                      <div class="browser__body">
                        <div class="browser__form">
                          <iframe id="video-player" class="browser__player" width="640" height="360" allowfullscreen src="https://www.youtube.com/embed/NkzKD8c-Sdo?enablejsapi=1&color=white&modestbranding=1&rel=0&controls=1" frameborder="0"></iframe>
                        </div>
                      </div>
                    </figure>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
