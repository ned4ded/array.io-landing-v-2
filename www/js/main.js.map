{"version":3,"sources":["terminal.js"],"names":["document","addEventListener","querySelector","classList","remove","pairs","Array","from","querySelectorAll","map","toggler","onIds","dataset","toggleOn","JSON","parse","offIds","toggleOff","on","i","getElementById","off","forEach","_ref","handler","ev","preventDefault","removeEventListener","anime","targets","opacity","duration","easing","height","getAttribute","firstElementChild","scrollHeight","complete","anim","visible","cb","el","bind","e","cubeEl","cube","Animation","initState","arguments","length","undefined","openTime","notify","_classCallCheck","this","vacate","setState","_createClass","key","value","state","Error","animationProcess","getState","_this","isState","isBusy","occupy","setTimeout","_this2","busy","SmoothScroll","link","_this3","pause","animation","window","attr","slice","target","go","viewportPart","scrollY","documentElement","scrollTop","getBoundingClientRect","top","_this4","body","getCurrentPosition","autoplay","restart","screen","string","compare","px","innerWidth","slogan","close","reduce","acc","cur","loop","direction","delay"],"mappings":"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","file":"main.js","sourcesContent":["document.addEventListener('DOMContentLoaded', (() => {\n  document.querySelector('html').classList.remove('no-js');\n\n  const pairs = Array.from( document.querySelectorAll('[data-toggle-on]') ).map(toggler => {\n    const onIds = toggler.dataset.toggleOn ? JSON.parse(toggler.dataset.toggleOn) : [];\n    const offIds = toggler.dataset.toggleOff ? JSON.parse(toggler.dataset.toggleOff) : [];\n\n    return { toggler, on: onIds.map(i => document.getElementById(i)), off: offIds.map(i => document.getElementById(i)) };\n  });\n\n  const toggle = function (cb, el) {\n    el.dataset.visible = true;\n\n    if(el.getAttribute('id') == 'ido-more') {\n      anime({\n        targets: el,\n        opacity: [0, 1],\n        height: [0, el.firstElementChild.scrollHeight],\n        duration: 500,\n        easing: 'linear',\n        complete: function(anim) {\n          cb();\n        }\n      })\n    } else {\n      anime({\n        targets: el,\n        opacity: [0, 1],\n        duration: 500,\n        easing: 'linear',\n        complete: function(anim) {\n          cb();\n        }\n      })\n    }\n\n    return;\n  }\n\n  pairs.forEach(({ toggler, on, off }) => {\n    const handler = (ev) => {\n      ev.preventDefault();\n\n      toggler.removeEventListener('click', handler);\n\n      anime({\n        targets: toggler,\n        opacity: [1, 0],\n        duration: 500,\n        easing: 'linear',\n        height: (toggler.getAttribute('id') == 'ido-more') ? [toggler.firstElementChild.scrollHeight, 0] : null,\n        complete: function(anim) {\n          toggler.dataset.visible = false;\n\n          const listener = () => {\n            toggler.addEventListener('click', handler);\n          };\n\n          on.forEach(toggle.bind(null, listener));\n        }\n      })\n\n      off.forEach(e => anime({\n        targets: e,\n        opacity: [1, 0],\n        duration: 500,\n        easing: 'linear',\n        complete: function(anim) {\n          e.dataset.visible = false;\n        }\n      }))\n\n      return;\n    };\n\n    toggler.addEventListener('click', handler);\n  });\n  class Animation {\n    constructor(el, initState = 'closed', openTime = 500, notify = true) {\n      this.el = el;\n      this.openTime = openTime;\n\n      this.vacate();\n\n      this.setState(initState, notify);\n    }\n\n    setState(state, notify = true) {\n      switch (state) {\n        case 'open':\n          this.state = 'open';\n          break;\n        case 'closed':\n          this.state = 'closed';\n          break;\n        case 'opening':\n          this.state = 'opening';\n          break;\n        case 'closing':\n          this.state = 'closing';\n          break;\n        default:\n          return new Error('ModalWindow: Wrong State');\n      }\n\n      notify ? this.notify() : null;\n\n      return this;\n    }\n\n    notify() {\n      this.el.dataset.animationProcess = this.state;\n    }\n\n    getState() {\n      return this.state;\n    }\n\n    isState(state) {\n      return this.getState() === state;\n    }\n\n    open(cb = () => {}) {\n      if(this.isState('open') || this.isBusy()) return false;\n\n      this.occupy();\n      this.setState('opening');\n\n      setTimeout(() => {\n        this.setState('open');\n        this.vacate();\n\n        return cb();\n      }, this.openTime);\n\n      return this;\n    }\n\n    close(cb = () => {}) {\n      if(this.isState('closed') || this.isBusy()) return false;\n\n      this.occupy();\n      this.setState('closing');\n\n      setTimeout(() => {\n        this.setState('closed');\n        this.vacate();\n\n        return cb();\n      }, this.openTime);\n\n      return this;\n    }\n\n    isBusy() {\n      return !!this.busy;\n    }\n\n    occupy() {\n      this.busy = true;\n    }\n\n    vacate() {\n      this.busy = false;\n    }\n  }\n  //\n  // class ModalWindow extends Animation {\n  //   constructor(element, lining, initState = 'closed', openTime = 500) {\n  //     super(element, initState, openTime, false);\n  //\n  //     this.lining = lining;\n  //     this.notify();\n  //   }\n  //\n  //   notify() {\n  //     this.el.dataset.modalState = this.state;\n  //     this.lining.dataset.modalState = this.state;\n  //   }\n  //\n  //   listener = (ev) => {\n  //     ev.preventDefault();\n  //\n  //     return;\n  //   }\n  //\n  //   open(cb = () => {}) {\n  //     if(this.isState('open') || this.isBusy()) return false;\n  //\n  //     window.addEventListener('touchmove', this.listener);\n  //     window.addEventListener('wheel', this.listener);\n  //     this.occupy();\n  //     this.setState('opening');\n  //\n  //     setTimeout(() => {\n  //       this.setState('open');\n  //       this.vacate();\n  //\n  //       return cb();\n  //     }, this.openTime);\n  //\n  //     return this;\n  //   }\n  //\n  //   close(cb = () => {}) {\n  //     if(this.isState('closed') || this.isBusy()) return false;\n  //\n  //     this.occupy();\n  //     this.setState('closing');\n  //\n  //     setTimeout(() => {\n  //       this.setState('closed');\n  //       this.vacate();\n  //\n  //       window.removeEventListener('touchmove', this.listener);\n  //       window.removeEventListener('wheel', this.listener);\n  //\n  //       return cb();\n  //     }, this.openTime);\n  //\n  //     return this;\n  //   }\n  // }\n\n  class SmoothScroll {\n    constructor(link) {\n      this.link = link;\n\n      const attr = this.link.getAttribute('href');\n\n      if(!attr || attr.slice(0, 1) !== '#') throw new Error('SmoothScroll: Wrong element passed');\n\n      this.target = document.getElementById( attr.slice(1) );\n\n      this.link.addEventListener('click', (ev) => {\n        ev.preventDefault();\n\n        this.go();\n      });\n    }\n\n    getCurrentPosition(viewportPart) {\n      return this.target ? (window.scrollY || document.documentElement.scrollTop) + this.target.getBoundingClientRect().top : 0;\n    }\n\n    go() {\n      this.animation = anime({\n        targets: [document.body, document.documentElement],\n        scrollTop: this.getCurrentPosition(),\n        duration: 600,\n        easing: \"easeInOutQuart\",\n        autoplay: false,\n        complete: () => {\n          window.removeEventListener(\"wheel\", this.pause);\n          window.removeEventListener(\"touchstart\", this.pause);\n        }\n      });\n\n      window.addEventListener(\"wheel\", this.pause);\n      window.addEventListener(\"touchstart\", this.pause);\n\n      this.animation.restart();\n\n      return;\n    }\n\n    pause = () => {\n      this.animation.pause();\n\n      this.animation = null;\n\n      window.removeEventListener(\"wheel\", this.pause);\n      window.removeEventListener(\"touchstart\", this.pause);\n\n      return;\n    }\n  }\n\n  const screen = {\n    smallerThan(string) {\n      const compare = (px) => {\n        return window.innerWidth < px;\n      }\n\n      switch (string) {\n        case 'xs':\n          return compare(575.98);\n        case 'sm':\n          return compare(767.98);\n        case 'md':\n          return compare(991.98);\n        case 'lg':\n          return compare(1199.98);\n        default:\n          throw new Error('Screen: wrong input');\n      }\n\n      return;\n    }\n  }\n\n  const links = Array.from( document.querySelectorAll('[data-smooth-scroll]') )\n    .forEach(e => new SmoothScroll(e));\n\n  const slogan = document.querySelector('.jumbotron__slogan');\n\n  if(!screen.smallerThan('sm')) {\n    (() => {\n      const cubeEl = document.querySelector('[data-animation-process-name=\"cube\"]');\n      const cube = new Animation(cubeEl, 'open');\n\n\n      setTimeout(() => {\n        cube.close(() => {\n          slogan.classList.remove('jumbotron__slogan--hidden')\n        });\n      }, 3000);\n    })()\n  } else {\n    slogan.classList.remove('jumbotron__slogan--hidden');\n  };\n\n  // const instruction = document.getElementById('instruction-steps');\n  // const prev = document.getElementById('instruction-steps-prev');\n  // const next = document.getElementById('instruction-steps-next');\n  //\n  // const options = {\n  //   simulateTouch: false,\n  //   observer: true,\n  //   observeParents: true,\n  //   navigation: {\n  //     prevEl: prev,\n  //     nextEl: next,\n  //   }\n  // }\n\n  // const swiper = (() => {\n  //   return instruction ? new Swiper(instruction, options) : null;\n  // })();\n\n  // const lining = document.getElementById('lining');\n\n  // const modals = Array.from( document.querySelectorAll('[data-modal-toggler]') ).map(el => {\n  //   const id = el.dataset.modalToggler;\n  //   const modal = document.getElementById(id);\n  //\n  //   return modal ? { toggler: el, modal: new ModalWindow(modal, lining) } : null;\n  // });\n\n  // modals.forEach(({ toggler, modal }) => {\n  //   const listener = (ev) => {\n  //     ev.preventDefault();\n  //\n  //     toggler.removeEventListener('click', listener);\n  //\n  //     modal.open(() => {\n  //       lining.addEventListener('click', liningListener);\n  //\n  //       return;\n  //     });\n  //\n  //   }\n  //\n  //   const liningListener = (ev) => {\n  //     ev.preventDefault();\n  //\n  //     lining.removeEventListener('click', liningListener);\n  //\n  //     modal.close(() => {\n  //       toggler.addEventListener('click', listener);\n  //\n  //       return;\n  //     })\n  //   }\n  //\n  //   toggler.addEventListener('click', listener);\n  // });\n\n  if(!screen.smallerThan('sm')) {\n    const icons = Array.from( document.querySelectorAll('[data-levitate]') ).reduce((acc, cur) => {\n      setTimeout(() => {\n        anime({\n          targets: cur,\n          top: ['10px', '-10px'],\n          loop: true,\n          direction: 'alternate',\n          easing: 'easeInOutCubic',\n          duration: 1000,\n          delay: 0\n        });\n\n        return;\n      }, acc);\n\n      return acc + 200;\n    }, 0);\n  }\n\n\n}), false);\n"]}